buildscript {
    repositories {
        mavenCentral()
    }
}
plugins {
    id 'application'
    id 'com.google.protobuf' version '0.8.8'
    id 'idea'
}

projects {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}
group = 'com.shivanthah.grpc'
version = '0.1'
description = 'GRPC Examples in Java'
def grpcVersion = '1.27.0'
def protobufVersion = '3.11.3'
def protocVersion = protobufVersion


dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    compile group: 'io.grpc', name: 'grpc-all', version: '1.27.0'
    compile 'com.netflix.eureka:eureka-client:1.4.11'
    compile 'com.google.inject:guice:4.1.0'
    compileOnly "javax.annotation:javax.annotation-api:1.2"


    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.28.2"
    compile 'org.slf4j:slf4j-api:2.0.0-alpha0'
    compile 'ch.qos.logback:logback-core:1.3.0-alpha4'
    compile 'ch.qos.logback:logback-classic:1.3.0-alpha4'
    compile 'com.yahoofinance-api:YahooFinanceAPI:3.15.0'
    compile 'org.apache.zookeeper:zookeeper:3.4.8'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
startScripts.enabled = false

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}


task helloWorldServer(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.helloworld.HelloWorldServer'
    applicationName = 'hello-world-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task helloWorldClient(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.helloworld.HelloWorldClient'
    applicationName = 'hello-world-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}